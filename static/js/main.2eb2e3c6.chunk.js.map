{"version":3,"sources":["components/MainSearch.js","App.js","serviceWorker.js","index.js"],"names":["source","_","times","title","faker","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","initialState","isLoading","results","value","MainSearch","props","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","state","length","re","RegExp","escapeRegExp","filter","test","this","Search","fluid","loading","input","onResultSelect","onSearchChange","debounce","leading","Component","MenuItems","Menu","Item","key","as","Icon","name","MobileContainer","children","useState","isOpen","setIsOpen","Responsive","Sidebar","Pushable","onlyMobile","animation","vertical","visible","onHide","Pusher","dimmed","Container","Button","onClick","basic","icon","DesktopContainer","minWidth","onlyTablet","Visibility","once","Grid","columns","Column","width","borderless","PageHeader","style","paddingBottom","Segment","container","only","tablet","computer","Image","size","src","mobile","verticalAlign","floated","textAlign","Content","padding","centered","Row","ResponsiveContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2eb2e3c6.chunk.js","sourcesContent":["import _ from 'lodash'\nimport faker from 'faker'\nimport React, {Component} from 'react'\nimport {Search} from 'semantic-ui-react'\n\nconst source = _.times(5, () => ({\n    title: faker.company.companyName(),\n    description: faker.company.catchPhrase(),\n    image: faker.internet.avatar(),\n    price: faker.finance.amount(0, 100, 2, '$'),\n}));\n\nconst initialState = {isLoading: false, results: [], value: ''};\n\nexport default class MainSearch extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    }\n\n    handleResultSelect = (e, {result}) => this.setState({value: result.title});\n\n    handleSearchChange = (e, {value}) => {\n        this.setState({isLoading: true, value});\n\n        setTimeout(() => {\n            if (this.state.value.length < 1) return this.setState(initialState);\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n            const isMatch = (result) => re.test(result.title);\n\n            this.setState({\n                isLoading: false,\n                results: _.filter(source, isMatch),\n            })\n        }, 300)\n    };\n\n    render() {\n        const {isLoading, value, results} = this.state;\n        return (\n            <Search\n                fluid={true}\n                loading={isLoading}\n                input={{fluid: true}}\n                onResultSelect={this.handleResultSelect}\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {leading: true,})}\n                results={results}\n                value={value}\n                {...this.props}\n            />\n        )\n    }\n}","import React, {useState} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport {Button, Container, Grid, Icon, Image, Menu, Responsive, Segment, Sidebar, Visibility} from \"semantic-ui-react\";\nimport MainSearch from \"./components/MainSearch\";\n\nconst MenuItems = [\n    <Menu.Item key={1} as='a'>\n        <Icon name='music'/>Note\n    </Menu.Item>,\n    <Menu.Item key={2} as='a'>\n        <Icon name='book'/>Theorie\n    </Menu.Item>,\n    <Menu.Item key={3} as='a'>\n        <Icon name='photo'/>Bilder\n    </Menu.Item>,\n    <Menu.Item key={4} as='a'>\n        <Icon name='calendar'/>Veranstaltungen\n    </Menu.Item>,\n    <Menu.Item key={5} as='a'>\n        <Icon name='file audio'/>Audio\n    </Menu.Item>\n];\n\nconst MobileContainer = ({children}) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleToggle = () => {\n        setIsOpen(!isOpen)\n    };\n\n    const handleSidebarHide = () => {\n        setIsOpen(false)\n    };\n    return (\n        <Responsive as={Sidebar.Pushable} {...Responsive.onlyMobile}>\n            <Sidebar as={Menu}\n                     animation='overlay'\n                     vertical\n                     visible={isOpen}\n                     onHide={handleSidebarHide}>\n                {MenuItems}\n            </Sidebar>\n            <Sidebar.Pusher dimmed={isOpen}>\n                <Container fluid>\n                    <Button onClick={handleToggle} basic icon>\n                        <Icon name='sidebar'/>\n                    </Button>\n                </Container>\n                <Container fluid>\n                    {children}\n                </Container>\n            </Sidebar.Pusher>\n        </Responsive>\n    );\n};\n\nconst DesktopContainer = ({children}) => {\n    return (\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n            <Visibility once={false}>\n                <Grid columns={2}>\n                    <Grid.Column width={4}>\n                        <Menu vertical borderless>\n                            {MenuItems}\n                        </Menu>\n                    </Grid.Column>\n                    <Grid.Column width={12}>\n                        {children}\n                    </Grid.Column>\n                </Grid>\n            </Visibility>\n        </Responsive>\n    )\n\n};\n\nconst Header = () => (\n    <Menu borderless fluid>\n        <Menu.Item>\n            <Image size='mini' src='logo.svg'/>\n        </Menu.Item>\n        <Menu.Item header>Noten Archiv</Menu.Item>\n        <Menu.Item>\n            <MainSearch/>\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n            <Menu.Item link>Anmeldung</Menu.Item>\n        </Menu.Menu>\n    </Menu>\n);\n\nconst PageHeader = () => (\n    <Container fluid style={{paddingBottom: '10px'}}>\n        <Segment>\n            <Grid container>\n                <Grid.Column only=\"large screen\" tablet={2} computer={1}>\n                    <Image size='mini' src='logo.svg'/>\n                </Grid.Column>\n                <Grid.Column mobile={4} tablet={3} computer={2} verticalAlign=\"middle\">\n                    <h4>Noten Archiv</h4>\n                </Grid.Column>\n                <Grid.Column mobile={8} tablet={9} computer={6}>\n                    <MainSearch/>\n                </Grid.Column>\n                <Grid.Column mobile={2} tablet={2} computer={2} floated=\"right\" textAlign=\"right\">\n                    <Button as=\"a\" basic icon=\"user\"/>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    </Container>\n);\n\nconst Content = () => (\n    <Container fluid style={{padding: '20px'}}>\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <Container>1</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                    <Container>3</Container>\n                </Grid.Column> <Grid.Column>\n                <Container>1</Container>\n                <Container>2</Container>\n                <Container>3</Container>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Container>1</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                    <Container>3</Container>\n                </Grid.Column> <Grid.Column>\n                <Container>1</Container>\n                <Container>2</Container>\n                <Container>3</Container>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Container>1</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                    <Container>3</Container>\n                </Grid.Column> <Grid.Column>\n                <Container>1</Container>\n                <Container>2</Container>\n                <Container>3</Container>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Container>1</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                    <Container>3</Container>\n                </Grid.Column> <Grid.Column>\n                <Container>1</Container>\n                <Container>2</Container>\n                <Container>3</Container>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Container>1</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                </Grid.Column>\n                <Grid.Column>\n                    <Container>1</Container>\n                    <Container>2</Container>\n                    <Container>3</Container>\n                </Grid.Column> <Grid.Column>\n                <Container>1</Container>\n                <Container>2</Container>\n                <Container>3</Container>\n            </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    </Container>\n);\n\nconst ResponsiveContainer = ({children}) => (\n    <>\n        {/*<Header/>*/}\n        <PageHeader/>\n        <DesktopContainer>{children}</DesktopContainer>\n        <MobileContainer>{children}</MobileContainer>\n    </>\n);\n\nexport default () => {\n    return (\n        <ResponsiveContainer>\n            <Content/>\n        </ResponsiveContainer>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}