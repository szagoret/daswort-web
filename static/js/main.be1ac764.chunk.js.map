{"version":3,"sources":["components/NavMenuItems.js","api/api.js","api/NotesApi.js","utils/history.js","components/SongSearch.js","utils/StringUtils.js","containers/PageHeader.js","containers/PageFooter.js","containers/DesktopContainer.js","containers/MobileContainer.js","containers/ResponsiveContainer.js","reducers/NotesReducer.js","store/CallbackMiddleware.js","store/store.js","actions/notes/NotesActionsTypes.js","components/CheckBoxGrid.js","utils/ArrayUtils.js","components/FilterDropdown.js","components/Difficulty.js","components/SelectedFilters.js","data-types/IdNameType.js","components/FilterToolbar.js","components/SongTable.js","api/CategoryApi.js","components/CategoryBreadcrumb.js","components/Categories.js","pages/NotesPage.js","actions/notes/NotesActions.js","pages/TheoryPage.js","pages/PhotosPage.js","pages/events.js","pages/EventsPage.js","pages/AudioPage.js","pages/SongPage.js","pages/SongListPage.js","serviceWorker.js","index.js","App.js"],"names":["NavMenuItems","Menu","Item","key","as","NavLink","to","activeClassName","exact","Icon","name","API_HOST","process","get","url","data","config","getTokenHeader","axios","catch","handleError","headers","error","Promise","reject","NOTES_API","findSongsByNameApi","searchTerm","params","findSongsByCriteriaApi","searchCriteria","post","history","createHashHistory","SongSearch","useState","isLoading","setIsLoading","setSearchTerm","result","setResult","useEffect","value","trim","a","async","fetchData","Search","className","fluid","input","loading","onResultSelect","e","push","song","id","onSearchChange","debounce","leading","resultRenderer","path","sections","map","item","i","content","Container","Segment","basic","style","margin","padding","color","fontWeight","fontSize","fontStyle","Breadcrumb","results","PageHeader","children","Grid","container","Column","only","tablet","computer","Image","width","height","src","largeScreen","verticalAlign","mobile","floated","textAlign","Button","circular","icon","PageFooter","paddingTop","DesktopContainer","Responsive","minWidth","onlyTablet","Visibility","once","widescreen","vertical","borderless","secondary","pointing","MobileContainer","isOpen","setIsOpen","Sidebar","Pushable","onlyMobile","animation","visible","onHide","Pusher","dimmed","onClick","ResponsiveContainer","INITIAL_STATE","songs","size","page","total","sortDirection","sortProperty","createMiddleware","dispatch","getState","next","action","meta","onSuccess","payload","onError","reducer","combineReducers","nr","state","type","createStore","composeWithDevTools","applyMiddleware","CallbackMiddleware","thunk","CheckBoxGrid","options","selectedOptions","onChange","rows","columnsCount","length","Math","ceil","columns","slice","chunkArray","columnValues","List","Checkbox","checked","includes","label","createElement","paddingRight","GridColumn","FilterDropdown","styles","selectedCount","floatingLabel","Label","floating","Popup","pinned","on","trigger","position","overflow","concat","pull","defaultProps","Difficulty","Array","keys","parseInt","SelectedFilters","shape","string","isRequired","filtersOptions","topics","authors","difficulties","compositions","instruments","topicsIds","authorsIds","compositionsIds","difficultiesIds","instrumentsIds","resetFilters","setValue","createFilters","selectedIds","filterName","find","option","updatedFilters","filter","selectedId","deleteSelectedFilter","filters","href","cursor","paddingLeft","FilterToolbar","onFilter","initialSearchState","setSearchCriteria","setFilterOptions","keyValue","totalItems","pageSize","onPageChange","sortedColumn","direction","onSorting","pagesCount","prop","sortable","TableCols","Table","HeaderCell","sorted","column","handleSort","TableRows","arrangement","composition","difficulty","date","Row","Cell","firstName","lastName","topic","join","striped","Header","Body","Footer","colSpan","Pagination","totalPages","activePage","ellipsisItem","firstItem","lastItem","prevItem","nextItem","CATEGORY_API","CategoryBreadcrumb","category","categoryPath","setCategoryPath","categoryId","fetchCategoryPath","c","isLastIndex","link","active","Categories","setCategory","categories","setCategories","fetchCategories","handleOnClick","categoriesList","Card","header","Message","attached","Group","NotesPage","props","onSearch","setState","findSongsByCriteria","this","SongTable","Component","connect","then","response","findSongsByCriteriaAction","TheoryPage","Content","Meta","Description","description","PhotosPage","itemsPerRow","image","now","Date","title","allDay","start","end","desc","setHours","getHours","Event","event","EventAgenda","customDayPropGetter","getDate","border","customSlotPropGetter","localizer","momentLocalizer","moment","EventsPage","events","defaultDate","defaultView","Views","AGENDA","dayPropGetter","slotPropGetter","components","agenda","AudioPage","SongPage","setSong","songId","match","GridRow","celled","collapsing","SongListPage","Boolean","window","location","hostname","ReactDOM","render","store","fallback","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be1ac764.chunk.js","sourcesContent":["import React from \"react\";\nimport {Icon, Menu} from 'semantic-ui-react';\nimport {NavLink} from \"react-router-dom\";\n\nconst NavMenuItems = [\n    <Menu.Item key={1} as={NavLink} to=\"/\" activeClassName=\"active\" exact>\n        <Icon name='music'/>Noten\n    </Menu.Item>,\n    <Menu.Item key={2} as={NavLink} to=\"/theory\" activeClassName=\"active\" exact>\n        <Icon name='book'/>Theorie\n    </Menu.Item>,\n    <Menu.Item key={3} as={NavLink} to=\"/photos\" activeClassName=\"active\" exact>\n        <Icon name='photo'/>Bilder\n    </Menu.Item>,\n    <Menu.Item key={4} as={NavLink} to=\"/events\" activeClassName=\"active\" exact>\n        <Icon name='calendar'/>Veranstaltungen\n    </Menu.Item>,\n    <Menu.Item key={5} as={NavLink} to=\"/audio\" activeClassName=\"active\" exact>\n        <Icon name='file audio'/>Audio\n    </Menu.Item>\n];\n\n\nexport default NavMenuItems;","import axios from \"axios\";\nexport const API_HOST = process.env.REACT_APP_API_HOST;\n\nexport const get = (url, data) => {\n    const config = getTokenHeader();\n    return axios.get(url, {...config, ...data}).catch(handleError);\n};\n\nexport function post(url, data) {\n    return axios.post(url, data, getTokenHeader()).catch(handleError);\n}\n\nconst getTokenHeader = () => {\n    const token = null;\n    const headers = token ? {Authorization: `Bearer ${token}`} : {};\n    return {headers};\n};\n\nconst handleError = (error) => {\n    return Promise.reject(error);\n};","import {API_HOST, get, post} from './api';\n\nexport const NOTES_API = `${API_HOST}/song`;\n\nexport const findSongsByNameApi = searchTerm => get(`${NOTES_API}/find`, {params: {searchTerm}});\n\nexport const findSongById = songId => get(`${NOTES_API}/${songId}`);\n\nexport const findSongsByCriteriaApi = searchCriteria => post(`${NOTES_API}/search`, searchCriteria);\n\nexport const getSongFiltersApi = () => get(`${NOTES_API}/filters`);\n\n","import {createHashHistory} from 'history';\n\nexport const history = createHashHistory();","import React, {useEffect, useState} from \"react\";\nimport {Breadcrumb, Container, Search, Segment} from \"semantic-ui-react\";\nimport {findSongsByNameApi} from \"../api/NotesApi\";\nimport {debounce} from 'lodash';\nimport {history} from '../utils/history';\nimport {isNotEmpty} from \"../utils/StringUtils\";\n\nconst SongSearch = () => {\n\n        const [isLoading, setIsLoading] = useState(false);\n        const [searchTerm, setSearchTerm] = useState('');\n        const [result, setResult] = useState([]);\n\n        useEffect(() => {\n            const fetchData = async () => {\n                setIsLoading(true);\n                const {data} = await findSongsByNameApi(searchTerm);\n                setResult(data);\n                setIsLoading(false);\n            };\n            if (isNotEmpty(searchTerm)) {\n                fetchData();\n            }\n        }, [searchTerm]);\n\n\n        const handleOnResultSelect = (e, {result}) => {\n            setSearchTerm('');\n            history.push(`/song/${result.song.id}`);\n        };\n\n        const handleSearchChange = (e, {value}) => {\n            debounce(setSearchTerm, 1000, {leading: true,})\n            setSearchTerm(value);\n        };\n\n\n        const resultRenderer = ({path, song}) => {\n            const sections = path.map((item, i) => {\n                return {key: item.id, content: item.name}\n            });\n            return (\n                <Container>\n                    <Segment basic style={{\n                        margin: '3px',\n                        padding: '.5em .5em',\n                        color: 'rgba(0,0,0,.4)',\n                        fontWeight: '400',\n                        fontSize: '1em',\n                        fontStyle: 'normal'\n                    }}>\n                        <Breadcrumb sections={sections}/>\n                    </Segment>\n                    <Segment basic style={{\n                        // backgroundColor: 'rgb(250, 252, 255)',\n                        margin: '3px',\n                        padding: '.5em .5em'\n                    }}>\n                        {song.name}\n                    </Segment>\n                </Container>\n            );\n        };\n\n        return (\n            <>\n                <Search\n                    className=\"main-search\"\n                    fluid\n                    input={{fluid: true}}\n                    loading={isLoading}\n                    onResultSelect={handleOnResultSelect}\n                    onSearchChange={debounce(handleSearchChange, 1000, {leading: true,})}\n                    resultRenderer={resultRenderer}\n                    results={result}\n                    value={searchTerm}\n                />\n            </>\n        );\n    }\n;\n\n\nexport default SongSearch;","import {trim} from 'lodash';\n\nexport const isNotEmpty = (value) => {\n    return !!trim(value);\n};","import {Button, Grid, Image, Segment} from \"semantic-ui-react\";\nimport React from \"react\";\nimport SongSearch from \"../components/SongSearch\";\n\nconst PageHeader = ({children}) => (\n    <Segment>\n        <Grid container>\n            {children}\n            <Grid.Column only=\"computer\" tablet={3} computer={2}>\n                <Image as='img' width=\"45\" height=\"45\" src='brand.svg'/>\n            </Grid.Column>\n            <Grid.Column only=\"large screen\" largeScreen={2} verticalAlign=\"middle\">\n                <h4 style={{color: '#00b5ad'}}>Notenarchiv</h4>\n            </Grid.Column>\n            <Grid.Column mobile={10} tablet={9} computer={6} largeScreen={7}>\n                <SongSearch/>\n            </Grid.Column>\n            <Grid.Column mobile={3} tablet={2} computer={6} largeScreen={5} floated=\"right\" textAlign=\"right\">\n                <Button as=\"a\" basic circular icon=\"user\"/>\n            </Grid.Column>\n        </Grid>\n    </Segment>\n);\n\nexport default PageHeader;","import {Container, Menu} from \"semantic-ui-react\";\nimport React from \"react\";\n\nconst PageFooter = () => (\n    <Container fluid style={{paddingTop: '20px'}}>\n        <Menu>\n            <Menu.Item>\n                Created by szagoret\n            </Menu.Item>\n        </Menu>\n    </Container>\n);\n\nexport default PageFooter;","import {Container, Grid, Menu, Responsive, Visibility} from \"semantic-ui-react\";\nimport NavMenuItems from \"../components/NavMenuItems\";\nimport React from \"react\";\nimport PageHeader from \"./PageHeader\";\nimport PageFooter from \"./PageFooter\";\n\nconst DesktopContainer = ({children}) => {\n    return (\n        <>\n            <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n                <PageHeader/>\n                <Visibility once={false}>\n                    <Container fluid style={{paddingTop: '10px'}}>\n                        <Grid>\n                            <Grid.Column widescreen={2} only=\"widescreen\"/>\n                            <Grid.Column tablet={4} computer={3}>\n                                <Menu vertical borderless secondary pointing>\n                                    {NavMenuItems}\n                                </Menu>\n                            </Grid.Column>\n                            <Grid.Column tablet={12} computer={12} widescreen={10}>\n                                <Container fluid>\n                                    {children}\n                                </Container>\n                            </Grid.Column>\n                            <Grid.Column widescreen={2} only=\"widescreen\"/>\n                        </Grid>\n                    </Container>\n                </Visibility>\n                <PageFooter/>\n            </Responsive>\n        </>\n    )\n};\n\nexport default DesktopContainer;","import React, {useState} from \"react\";\nimport {Button, Container, Grid, Icon, Menu, Responsive, Sidebar} from \"semantic-ui-react\";\nimport NavMenuItems from \"../components/NavMenuItems\";\nimport PageHeader from \"./PageHeader\";\n\nconst MobileContainer = ({children}) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleToggle = () => {\n        setIsOpen(!isOpen)\n    };\n\n    const handleSidebarHide = () => {\n        setIsOpen(false)\n    };\n    return (\n        <Responsive as={Sidebar.Pushable} {...Responsive.onlyMobile}>\n            <Sidebar as={Menu}\n                     animation='overlay'\n                     vertical\n                     visible={isOpen}\n                     onHide={handleSidebarHide}>\n                {NavMenuItems}\n            </Sidebar>\n            <Sidebar.Pusher dimmed={isOpen}>\n                <PageHeader>\n                    <Grid.Column mobile={3}>\n                        <Button onClick={handleToggle} basic icon>\n                            <Icon name='sidebar'/>\n                        </Button>\n                    </Grid.Column>\n                </PageHeader>\n                <Container fluid>\n                    {children}\n                </Container>\n            </Sidebar.Pusher>\n        </Responsive>\n    );\n};\n\nexport default MobileContainer;","import DesktopContainer from \"./DesktopContainer\";\nimport MobileContainer from \"./MobileContainer\";\nimport React from \"react\";\n\nconst ResponsiveContainer = ({children}) => (\n    <>\n        <DesktopContainer>{children}</DesktopContainer>\n        <MobileContainer>{children}</MobileContainer>\n    </>\n);\n\nexport default ResponsiveContainer;","import {FIND_SONGS_BY_CRITERIA} from \"../actions/notes/NotesActionsTypes\";\n\nconst INITIAL_STATE = {\n    songs: [],\n    size: 20,\n    page: 0,\n    total: 0,\n    sortDirection: 'ASC',\n    sortProperty: 'name',\n};\n\nexport default (state = INITIAL_STATE, action = {}) => {\n    switch (action.type) {\n        case FIND_SONGS_BY_CRITERIA: {\n            return {...state, ...action.result}\n        }\n        default:\n            return state;\n    }\n}","const createMiddleware = () => {\n    return ({dispatch, getState}) => next => action => {\n        if (action.meta) {\n            if (action.meta.onSuccess && !action.error) {\n                action.meta.onSuccess(action.payload);\n            }\n            if (action.meta.onError && action.error) {\n                action.meta.onError(action.payload);\n            }\n        }\n        next(action)\n    };\n};\n\nexport default createMiddleware();","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport NotesReducer from \"../reducers/NotesReducer\";\nimport CallbackMiddleware from \"./CallbackMiddleware\";\n\nconst reducer = combineReducers({nr: NotesReducer});\n\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(CallbackMiddleware, thunk)));","export const FIND_SONGS_BY_CRITERIA = \"FIND_SONGS_BY_CRITERIA\";","import {chunkArray} from \"../utils/ArrayUtils\";\nimport React, {createElement} from \"react\";\nimport {Checkbox, Grid, GridColumn, List} from \"semantic-ui-react\";\nimport {arrayOf, func, number, shape, string} from \"prop-types\";\n\nconst CheckBoxGrid = ({options, selectedOptions, onChange, rows, as}) => {\n    const columnsCount = options.length < rows ? 1 : Math.ceil(options.length / rows);\n\n    const columns = () => {\n        return chunkArray(options, rows).map((columnValues, i) =>\n            <List key={i}>\n                {\n                    columnValues.map(({id, name}, i) =>\n                        <List.Item key={`${id}-${i}`}>\n                            <Checkbox\n                                onChange={(e, {value, checked}) => onChange(value, checked)}\n                                checked={selectedOptions.includes(id)}\n                                key={id}\n                                name={id}\n                                label={{children: as ? createElement(as, {}, name) : name}}\n                                value={id}\n                                style={{padding: '4px', paddingRight: '7px'}}\n                            />\n                        </List.Item>\n                    )\n                }\n            </List>);\n    };\n    return (\n        <Grid columns={columnsCount}>\n            {columns().map((value, i) => <GridColumn key={i} style={{padding: '0'}}>{value}</GridColumn>)}\n        </Grid>\n    );\n};\n\nCheckBoxGrid.propTypes = {\n    options: arrayOf(shape({\n        id: string.isRequired,\n        name: string.isRequired\n    })).isRequired,\n    selectedOptions: arrayOf(string).isRequired,\n    onChange: func.isRequired,\n    rows: number.isRequired\n};\n\nexport default CheckBoxGrid;","export const chunkArray = (options = [], size = 1) => {\n    const results = [];\n\n    for (let i = 0; i < options.length; i += size) {\n        results.push(options.slice(i, i + size));\n    }\n\n    return results;\n};","import React from \"react\";\nimport {arrayOf, func, number, shape, string} from \"prop-types\";\nimport {concat, pull} from 'lodash';\nimport {Button, Icon, Label, Menu, Popup, Segment} from \"semantic-ui-react\";\nimport CheckBoxGrid from \"./CheckBoxGrid\";\n\nconst FilterDropdown = ({label, options, selectedOptions, onChange, rows, styles, as}) => {\n\n    const onFilterChange = (id, checked) => {\n        if (!checked) {\n            onChange(pull([...selectedOptions], id));\n        } else {\n            onChange(concat(selectedOptions, id));\n        }\n    };\n    const selectedCount = selectedOptions.length;\n\n    const floatingLabel = <Label color='teal' floating> {selectedCount} </Label>;\n\n    return (\n        <Popup pinned on='click'\n               trigger={<Button as={Menu.Item}> <Icon name='chevron down'/>{label} {selectedCount > 0 && floatingLabel}</Button>}\n               position=\"bottom left\">\n            <Segment basic style={{...styles, overflow: 'auto'}}>\n                <CheckBoxGrid\n                    options={options}\n                    selectedOptions={selectedOptions}\n                    onChange={onFilterChange}\n                    rows={rows}\n                    as={as}\n                />\n            </Segment>\n        </Popup>\n    )\n};\nFilterDropdown.defaultProps = {\n    label: '',\n    options: [],\n    selectedOptions: [],\n    rows: 14\n};\n\nFilterDropdown.propTypes = {\n    label: string.isRequired,\n    options: arrayOf(shape({\n        id: string.isRequired,\n        name: string.isRequired\n    })).isRequired,\n    selectedOptions: arrayOf(string).isRequired,\n    onChange: func.isRequired,\n    rows: number\n};\n\nexport default FilterDropdown;","import React from \"react\";\nimport {Icon} from \"semantic-ui-react\";\nimport {string} from \"prop-types\";\n\nconst Difficulty = ({children}) => (\n    [...Array(5).keys()].map(i => (<Icon key={i} name={i < parseInt(children) ? \"circle\" : \"circle outline\"}/>))\n);\n\nDifficulty.propTypes = {\n    children: string.isRequired\n};\n\nexport default Difficulty;","import React, {createElement} from \"react\";\nimport {Container, Icon, Label} from \"semantic-ui-react\";\nimport {concat} from 'lodash';\nimport Difficulty from \"./Difficulty\";\nimport {arrayOf, func, shape, string} from \"prop-types\";\nimport IdNameType from \"../data-types/IdNameType\";\n\nconst SelectedFilters = ({\n                             filtersOptions: {\n                                 topics,\n                                 authors,\n                                 difficulties,\n                                 compositions,\n                                 instruments\n                             },\n                             searchCriteria: {\n                                 topicsIds,\n                                 authorsIds,\n                                 compositionsIds,\n                                 difficultiesIds,\n                                 instrumentsIds\n                             }, resetFilters, setValue\n                         }) => {\n\n    const deleteSelectedFilter = (selectedIds, id, filterName) => {\n        const updatedFilters = selectedIds.filter(selectedId => selectedId !== id);\n        setValue({[filterName]: updatedFilters})\n    };\n\n    const createFilters = (options, selectedIds, filterName, as) =>\n        selectedIds.map(id => {\n            const value = (options.find(option => option.id === id) || {}).name;\n            return (\n                <Label key={`filter-${filterName}-${id}`}\n                       style={{margin: '1px'}}\n                       basic>\n                    {as ? createElement(as, {}, value) : value}\n                    <Icon name='delete' onClick={() => deleteSelectedFilter(selectedIds, id, filterName)}/>\n                </Label>\n            );\n        });\n\n    const filters = concat(\n        createFilters(topics, topicsIds, 'topicsIds'),\n        createFilters(authors, authorsIds, 'authorsIds'),\n        createFilters(difficulties, difficultiesIds, \"difficultiesIds\", Difficulty),\n        createFilters(compositions, compositionsIds, 'compositionsIds'),\n        createFilters(instruments, instrumentsIds, 'instrumentsIds')\n    );\n\n\n    return (\n        <Container>\n            {filters}\n            {filters.length > 0 && <a href={`# `} style={{cursor: 'pointer', paddingLeft: '2px'}} onClick={resetFilters}>Clear All</a>}\n        </Container>\n    );\n};\n\nSelectedFilters.propTypes = {\n    filtersOptions: shape({\n        topics: arrayOf(IdNameType),\n        authors: arrayOf(IdNameType),\n        difficulties: arrayOf(IdNameType),\n        compositions: arrayOf(IdNameType),\n        instruments: arrayOf(IdNameType)\n    }).isRequired,\n    searchCriteria: shape({\n        topicsIds: arrayOf(string),\n        authorsIds: arrayOf(string),\n        compositionsIds: arrayOf(string),\n        difficultiesIds: arrayOf(string),\n        instrumentsIds: arrayOf(string)\n    }).isRequired,\n    resetFilters: func.isRequired,\n    setValue: func.isRequired\n};\n\nSelectedFilters.defaultProps = {\n    filtersOptions: {\n        topics: [],\n        authors: [],\n        difficulties: [],\n        compositions: [],\n        instruments: []\n    },\n    searchCriteria: {\n        topicsIds: [],\n        authorsIds: [],\n        compositionsIds: [],\n        difficultiesIds: [],\n        instrumentsIds: []\n    }\n};\n\nexport default SelectedFilters;","import {shape, string} from \"prop-types\";\n\nexport default shape({\n    id: string.isRequired,\n    name: string.isRequired\n});\n","import React, {useEffect, useState} from \"react\";\nimport {Menu} from \"semantic-ui-react\";\nimport {func} from \"prop-types\";\nimport FilterDropdown from \"./FilterDropdown\";\nimport {getSongFiltersApi} from \"../api/NotesApi\";\nimport Difficulty from \"./Difficulty\";\nimport SelectedFilters from \"./SelectedFilters\";\n\nconst FilterToolbar = ({onFilter}) => {\n\n    const initialSearchState = {\n        topicsIds: [],\n        authorsIds: [],\n        compositionsIds: [],\n        difficultiesIds: [],\n        instrumentsIds: []\n    };\n\n    const initialOptionsState = {\n        topics: [],\n        authors: [],\n        difficulties: [],\n        compositions: [],\n        instruments: []\n    };\n\n    const [searchCriteria, setSearchCriteria] = useState(initialSearchState);\n\n    useEffect(() => {\n        onFilter(searchCriteria);\n    }, [searchCriteria, onFilter]);\n\n    const [filtersOptions, setFilterOptions] = useState(initialOptionsState);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await getSongFiltersApi();\n            setFilterOptions(result.data);\n        };\n\n        fetchData().catch();\n    }, []);\n\n    const setValue = (keyValue) => {\n        setSearchCriteria({...searchCriteria, ...keyValue});\n    };\n\n\n    const resetFilters = () => {\n        setSearchCriteria({...initialSearchState});\n    };\n\n    return (\n        <>\n            <Menu>\n                <FilterDropdown label=\"Thema\"\n                                options={filtersOptions.topics}\n                                selectedOptions={searchCriteria.topicsIds}\n                                onChange={(topicsIds) => setValue({topicsIds})}\n                />\n                <FilterDropdown\n                    label=\"Author\"\n                    options={filtersOptions.authors}\n                    selectedOptions={searchCriteria.authorsIds}\n                    onChange={(authorsIds) => setValue({authorsIds})}\n                    styles={{width: '550px'}}\n                    rows={15}\n                />\n                <FilterDropdown\n                    label=\"Schwierigkeitsgrad\"\n                    options={filtersOptions.difficulties}\n                    selectedOptions={searchCriteria.difficultiesIds}\n                    onChange={(difficultiesIds) => setValue({difficultiesIds})}\n                    as={Difficulty}\n                />\n                <FilterDropdown\n                    label=\"Besetzung\"\n                    options={filtersOptions.compositions}\n                    selectedOptions={searchCriteria.compositionsIds}\n                    onChange={(compositionsIds) => setValue({compositionsIds})}\n                />\n                <FilterDropdown\n                    label=\"Instruments\"\n                    options={filtersOptions.instruments}\n                    selectedOptions={searchCriteria.instrumentsIds}\n                    onChange={(instrumentsIds) => setValue({instrumentsIds})}\n                />\n            </Menu>\n            <SelectedFilters searchCriteria={searchCriteria}\n                             filtersOptions={filtersOptions}\n                             resetFilters={resetFilters}\n                             setValue={setValue}\n            />\n        </>\n    );\n};\n\nFilterToolbar.propTypes = {\n    onFilter: func.isRequired\n};\n\nexport default FilterToolbar;","import React from \"react\";\nimport {Icon, Pagination, Table} from \"semantic-ui-react\";\nimport Difficulty from \"./Difficulty\";\nimport {Link} from \"react-router-dom\";\n\nexport default ({songs, page, totalItems, pageSize, onPageChange, sortedColumn, direction, onSorting}) => {\n\n    const pagesCount = Math.ceil(totalItems / pageSize);\n\n    const sortDirection = direction === 'ASC' ? 'ascending' : 'descending';\n\n    const columns = [\n        {name: \"Name\", prop: 'name', sortable: true},\n        {name: \"Author\", prop: 'arrangement', sortable: true},\n        {name: \"Besetzung\", prop: 'composition', sortable: true},\n        {name: \"Schwlerigkeitsgrad\", prop: 'difficulty', sortable: true},\n        {name: \"Thema\", prop: 'topics', sortable: false},\n        {name: \"Date\", prop: 'createdOn', sortable: true}];\n\n    const handleSort = (prop) => {\n        const isColumnSortable = (columns.find(column => column.prop === prop) || {}).sortable;\n        if (isColumnSortable) {\n            onSorting(prop)\n        }\n    };\n\n    const TableCols = columns.map(({name, prop, sortable}, i) =>\n        <Table.HeaderCell\n            key={i}\n            sorted={sortable && sortedColumn === prop ? sortDirection : null}\n            content={name}\n            onClick={() => handleSort(prop)}\n        />);\n\n    const TableRows = songs.map(\n        ({\n             id,\n             name,\n             arrangement,\n             composition,\n             difficulty,\n             topics,\n             date\n         }, i) =>\n            (\n                <Table.Row key={i}>\n                    <Table.Cell style={{fontSize: '1.3em'}}><Link to={`/song/${id}`}>{name}</Link></Table.Cell>\n                    <Table.Cell>{(arrangement || {}).firstName}{' '}{(arrangement || {}).lastName}</Table.Cell>\n                    <Table.Cell>{(composition || {}).name}</Table.Cell>\n                    <Table.Cell>\n                        <Difficulty>{(difficulty || {}).name}</Difficulty>\n                    </Table.Cell>\n                    <Table.Cell>{topics.map(topic => topic.name).join(\" , \")}</Table.Cell>\n                    <Table.Cell>Sep. 2013</Table.Cell>\n                </Table.Row>\n            )\n    );\n\n    return (\n        <Table sortable striped>\n            <Table.Header>\n                <Table.Row>\n                    {TableCols}\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {TableRows}\n            </Table.Body>\n            <Table.Footer>\n                <Table.Row>\n                    <Table.HeaderCell colSpan='6'>\n                        <Pagination totalPages={pagesCount}\n                                    activePage={page + 1}\n                                    onPageChange={(e, {activePage}) => onPageChange(activePage - 1)}\n                                    ellipsisItem={{content: <Icon name='ellipsis horizontal'/>, icon: true}}\n                                    firstItem={{content: <Icon name='angle double left'/>, icon: true}}\n                                    lastItem={{content: <Icon name='angle double right'/>, icon: true}}\n                                    prevItem={{content: <Icon name='angle left'/>, icon: true}}\n                                    nextItem={{content: <Icon name='angle right'/>, icon: true}}\n                        />\n                    </Table.HeaderCell>\n                </Table.Row>\n            </Table.Footer>\n        </Table>);\n};","import {API_HOST, get} from './api';\n\nexport const CATEGORY_API = `${API_HOST}/category`;\n\nexport const getCategoryChildrenApi = categoryId => get(`${CATEGORY_API}/children`, {params: {categoryId}});\n\nexport const getCategoriesParentTreeApi = categoryId => get(`${CATEGORY_API}/${categoryId}/parent/tree`);\n","import React, {useEffect, useState} from \"react\";\nimport {getCategoriesParentTreeApi} from \"../api/CategoryApi\";\nimport {Breadcrumb, Icon} from \"semantic-ui-react\";\nimport {concat} from 'lodash';\n\nconst CategoryBreadcrumb = ({category, onClick}) => {\n\n    const [categoryPath, setCategoryPath] = useState([]);\n\n    useEffect(() => {\n        if ((category || {}).id) {\n            const fetchCategoryPath = async () => {\n                const result = await getCategoriesParentTreeApi(category.id);\n                setCategoryPath(result.data);\n            };\n            fetchCategoryPath().catch();\n        } else {\n            setCategoryPath([]);\n        }\n    }, [category]);\n\n    const sections = concat({\n            key: '0',\n            content: <Icon name='home'/>,\n            onClick: () => onClick()\n        },\n        categoryPath.map((c, i) => {\n            const isLastIndex = i === categoryPath.length - 1;\n            return {\n                key: c.id,\n                content: c.name,\n                link: !isLastIndex,\n                active: isLastIndex,\n                onClick: () => !isLastIndex ? onClick(c) : null\n            };\n        })\n    );\n\n    return (\n        <div>\n            <Breadcrumb sections={sections}/>\n        </div>\n    );\n};\n\nexport default CategoryBreadcrumb;\n\n","import React, {useEffect, useState} from \"react\";\nimport {Card, Message, Segment} from \"semantic-ui-react\";\nimport {getCategoryChildrenApi} from \"../api/CategoryApi\";\nimport CategoryBreadcrumb from \"./CategoryBreadcrumb\";\n\nconst Categories = () => {\n\n    const [category, setCategory] = useState();\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        const fetchCategories = async () => {\n            const result = await getCategoryChildrenApi((category || {}).id);\n            setCategories(result.data);\n        };\n        fetchCategories().catch();\n    }, [category]);\n\n    const handleOnClick = (category) => {\n        setCategory(category);\n    };\n    const categoriesList = categories.map((category, i) => <Card key={i} link header={category.name} onClick={() => handleOnClick(category)}/>);\n\n    return (\n        <div>\n            <Message attached header='Categories'/>\n            <Segment attached>\n                <CategoryBreadcrumb category={category} onClick={handleOnClick}/>\n            </Segment>\n            <Card.Group className='attached fluid segment'>\n                {categoriesList}\n            </Card.Group>\n        </div>\n    );\n};\n\n\nexport default Categories;","import React, {Component} from \"react\";\nimport {Segment} from \"semantic-ui-react\";\nimport FilterToolbar from \"../components/FilterToolbar\";\nimport SongTable from \"../components/SongTable\";\nimport {connect} from \"react-redux\";\nimport {findSongsByCriteria} from \"../actions/notes/NotesActions\";\nimport Categories from \"../components/Categories\";\n\nclass NotesPage extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {page: 0, sortProperty: 'name', sortDirection: 'ASC', searchCriteria: {}, loading: false}\n    }\n\n    onSearch = () => {\n        const {searchCriteria, page, sortProperty, sortDirection} = this.state;\n        const {size} = this.props;\n        this.setState({loading: true},\n            this.props.findSongsByCriteria({\n                ...searchCriteria,\n                page,\n                size,\n                sortDirection,\n                sortProperty\n            }, () => this.setState({loading: false})));\n    };\n\n    onFilter = (searchCriteria) => this.setState({searchCriteria}, this.onSearch);\n\n    onSorting = (sortProperty) => this.setState({\n        sortProperty,\n        sortDirection: this.state.sortDirection === 'ASC' ? 'DESC' : 'ASC'\n    }, this.onSearch);\n\n    onPageChange = (page) => this.setState({page}, this.onSearch);\n\n    render() {\n        const {songs, page, total, size} = this.props;\n        const {sortDirection, sortProperty, loading} = this.state;\n        return (\n            <>\n                <Segment basic loading={loading}>\n                    <FilterToolbar onFilter={this.onFilter}/>\n                    <SongTable\n                        songs={songs}\n                        totalItems={total}\n                        page={page}\n                        pageSize={size}\n                        onPageChange={this.onPageChange}\n                        sortedColumn={sortProperty}\n                        direction={sortDirection}\n                        onSorting={this.onSorting}\n                    />\n                </Segment>\n                <Categories/>\n            </>\n        );\n    }\n}\n\nexport default connect((state) => ({\n    songs: state.nr.songs,\n    size: state.nr.size,\n    page: state.nr.page,\n    total: state.nr.total\n}), {findSongsByCriteria})(NotesPage);","import {findSongsByCriteriaApi} from \"../../api/NotesApi\";\nimport {FIND_SONGS_BY_CRITERIA} from \"./NotesActionsTypes\";\n\nexport const findSongsByCriteriaAction = (result, onSuccess) => {\n    return {\n        type: FIND_SONGS_BY_CRITERIA,\n        result,\n        meta: {\n            onSuccess\n        }\n    }\n};\n\nexport const findSongsByCriteria = (searchCriteria, onSuccess) => {\n    return dispatch => findSongsByCriteriaApi(searchCriteria)\n        .then(response => dispatch(findSongsByCriteriaAction(response.data, onSuccess)));\n};\n","import React from \"react\";\nimport {Card, Segment} from \"semantic-ui-react\";\n\nconst TheoryPage = () => (\n    <Segment>\n        <h3>Theory</h3>\n        <Card.Group>\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n        </Card.Group>\n    </Segment>\n);\n\nexport default TheoryPage;","import React from \"react\";\nimport {Card, Segment} from \"semantic-ui-react\";\n\nconst src = '/white-image.png';\n\nconst PhotosPage = () => (\n    <Segment>\n        <h3>Photos</h3>\n        <Card.Group itemsPerRow={4}>\n            <Card color='red' image={src}/>\n            <Card color='orange' image={src}/>\n            <Card color='yellow' image={src}/>\n            <Card color='olive' image={src}/>\n            <Card color='green' image={src}/>\n            <Card color='teal' image={src}/>\n            <Card color='blue' image={src}/>\n            <Card color='violet' image={src}/>\n            <Card color='purple' image={src}/>\n            <Card color='pink' image={src}/>\n            <Card color='brown' image={src}/>\n            <Card color='grey' image={src}/>\n        </Card.Group>\n    </Segment>\n);\n\nexport default PhotosPage;","const now = new Date()\n\nexport default [\n    {\n        id: 0,\n        title: 'All Day Event very long title',\n        allDay: true,\n        start: new Date(2015, 3, 0),\n        end: new Date(2015, 3, 1),\n    },\n    {\n        id: 1,\n        title: 'Long Event',\n        start: new Date(2015, 3, 7),\n        end: new Date(2015, 3, 10),\n    },\n\n    {\n        id: 2,\n        title: 'DTS STARTS',\n        start: new Date(2016, 2, 13, 0, 0, 0),\n        end: new Date(2016, 2, 20, 0, 0, 0),\n    },\n\n    {\n        id: 3,\n        title: 'DTS ENDS',\n        start: new Date(2016, 10, 6, 0, 0, 0),\n        end: new Date(2016, 10, 13, 0, 0, 0),\n    },\n\n    {\n        id: 4,\n        title: 'Some Event',\n        start: new Date(2015, 3, 9, 0, 0, 0),\n        end: new Date(2015, 3, 10, 0, 0, 0),\n    },\n    {\n        id: 5,\n        title: 'Conference',\n        start: new Date(2015, 3, 11),\n        end: new Date(2015, 3, 13),\n        desc: 'Big conference for important people',\n    },\n    {\n        id: 6,\n        title: 'Meeting',\n        start: new Date(2015, 3, 12, 10, 30, 0, 0),\n        end: new Date(2015, 3, 12, 12, 30, 0, 0),\n        desc: 'Pre-meeting meeting, to prepare for the meeting',\n    },\n    {\n        id: 7,\n        title: 'Lunch',\n        start: new Date(2015, 3, 12, 12, 0, 0, 0),\n        end: new Date(2015, 3, 12, 13, 0, 0, 0),\n        desc: 'Power lunch',\n    },\n    {\n        id: 8,\n        title: 'Meeting',\n        start: new Date(2015, 3, 12, 14, 0, 0, 0),\n        end: new Date(2015, 3, 12, 15, 0, 0, 0),\n    },\n    {\n        id: 9,\n        title: 'Happy Hour',\n        start: new Date(2015, 3, 12, 17, 0, 0, 0),\n        end: new Date(2015, 3, 12, 17, 30, 0, 0),\n        desc: 'Most important meal of the day',\n    },\n    {\n        id: 10,\n        title: 'Dinner',\n        start: new Date(2015, 3, 12, 20, 0, 0, 0),\n        end: new Date(2015, 3, 12, 21, 0, 0, 0),\n    },\n    {\n        id: 11,\n        title: 'Birthday Party',\n        start: new Date(2015, 3, 13, 7, 0, 0),\n        end: new Date(2015, 3, 13, 10, 30, 0),\n    },\n    {\n        id: 12,\n        title: 'Late Night Event',\n        start: new Date(2015, 3, 17, 19, 30, 0),\n        end: new Date(2015, 3, 18, 2, 0, 0),\n    },\n    {\n        id: 12.5,\n        title: 'Late Same Night Event',\n        start: new Date(2015, 3, 17, 19, 30, 0),\n        end: new Date(2015, 3, 17, 23, 30, 0),\n    },\n    {\n        id: 13,\n        title: 'Multi-day Event',\n        start: new Date(2015, 3, 20, 19, 30, 0),\n        end: new Date(2015, 3, 22, 2, 0, 0),\n    },\n    {\n        id: 14,\n        title: 'Today',\n        start: new Date(new Date().setHours(new Date().getHours() - 3)),\n        end: new Date(new Date().setHours(new Date().getHours() + 3)),\n    },\n    {\n        id: 15,\n        title: 'Point in Time Event',\n        start: now,\n        end: now,\n    },\n    {\n        id: 16,\n        title: 'Video Record',\n        start: new Date(2015, 3, 14, 15, 30, 0),\n        end: new Date(2015, 3, 14, 19, 0, 0),\n    },\n    {\n        id: 17,\n        title: 'Dutch Song Producing',\n        start: new Date(2015, 3, 14, 16, 30, 0),\n        end: new Date(2015, 3, 14, 20, 0, 0),\n    },\n    {\n        id: 18,\n        title: 'Itaewon Halloween Meeting',\n        start: new Date(2015, 3, 14, 16, 30, 0),\n        end: new Date(2015, 3, 14, 17, 30, 0),\n    },\n    {\n        id: 19,\n        title: 'Online Coding Test',\n        start: new Date(2015, 3, 14, 17, 30, 0),\n        end: new Date(2015, 3, 14, 20, 30, 0),\n    },\n    {\n        id: 20,\n        title: 'An overlapped Event',\n        start: new Date(2015, 3, 14, 17, 0, 0),\n        end: new Date(2015, 3, 14, 18, 30, 0),\n    },\n    {\n        id: 21,\n        title: 'Phone Interview',\n        start: new Date(2015, 3, 14, 17, 0, 0),\n        end: new Date(2015, 3, 14, 18, 30, 0),\n    },\n    {\n        id: 22,\n        title: 'Cooking Class',\n        start: new Date(2015, 3, 14, 17, 30, 0),\n        end: new Date(2015, 3, 14, 19, 0, 0),\n    },\n    {\n        id: 23,\n        title: 'Go to the gym',\n        start: new Date(2015, 3, 14, 18, 30, 0),\n        end: new Date(2015, 3, 14, 20, 0, 0),\n    },\n]","import React from \"react\";\nimport {Segment} from \"semantic-ui-react\";\nimport {Calendar, momentLocalizer, Views} from 'react-big-calendar';\nimport moment from 'moment';\nimport events from './events';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst Event = ({event}) => {\n    return (\n        <span>\n      <strong>{event.title}</strong>\n            {event.desc && ':  ' + event.desc}\n    </span>\n    )\n};\n\nconst EventAgenda = ({event}) => {\n    return (\n        <span>\n      <em style={{color: 'magenta'}}>{event.title}</em>\n      <p>{event.desc}</p>\n    </span>\n    )\n};\n\nconst customDayPropGetter = date => {\n    if (date.getDate() === 7 || date.getDate() === 15)\n        return {\n            className: 'special-day',\n            style: {\n                border: 'solid 3px ' + (date.getDate() === 7 ? '#faa' : '#afa'),\n            },\n        };\n    else return {}\n};\n\nconst customSlotPropGetter = date => {\n    if (date.getDate() === 7 || date.getDate() === 15)\n        return {\n            className: 'special-day',\n        };\n    else return {}\n};\nconst localizer = momentLocalizer(moment);\n\nconst EventsPage = () => (\n    <Segment>\n        <h3>Events</h3>\n        <Calendar\n            events={events}\n            localizer={localizer}\n            defaultDate={new Date(2015, 3, 1)}\n            defaultView={Views.AGENDA}\n            dayPropGetter={customDayPropGetter}\n            slotPropGetter={customSlotPropGetter}\n            style={{height: '500px'}}\n            components={{\n                event: Event,\n                agenda: {\n                    event: EventAgenda,\n                },\n            }}\n        />\n    </Segment>\n);\n\nexport default EventsPage;","import React from \"react\";\nimport {Card, Segment} from \"semantic-ui-react\";\n\nconst AudioPage = () => (\n    <Segment>\n        <h3>Audio</h3>\n        <Card.Group>\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n            <Card>\n                <Card.Content>\n                    <Card.Header>Matthew Harris</Card.Header>\n                    <Card.Meta>Co-Worker</Card.Meta>\n                    <Card.Description>\n                        Matthew is a pianist living in Nashville.\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content>\n                    <Card.Header content='Jake Smith'/>\n                    <Card.Meta content='Musicians'/>\n                    <Card.Description content='Jake is a drummer living in New York.'/>\n                </Card.Content>\n            </Card>\n\n            <Card>\n                <Card.Content\n                    header='Elliot Baker'\n                    meta='Friend'\n                    description='Elliot is a music producer living in Chicago.'\n                />\n            </Card>\n\n            <Card\n                header='Jenny Hess'\n                meta='Friend'\n                description='Jenny is a student studying Media Management at the New School'\n            />\n        </Card.Group>\n    </Segment>\n);\n\nexport default AudioPage;","import React, {useEffect, useState} from \"react\";\nimport {Container, Grid, GridColumn, GridRow, Icon, Image, Segment, Table} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {findSongById} from \"../api/NotesApi\";\n\nconst SongPage = (props) => {\n\n    const [song, setSong] = useState({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const {data} = await findSongById(props.match.params.id);\n            setSong(data);\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <Container>\n            <Grid>\n                <GridRow>\n                    <GridColumn>\n                        <Link to=\"/\"> <Icon name=\"arrow left\"/> Back to home page</Link>\n                    </GridColumn>\n                </GridRow>\n                <GridRow>\n                    <GridColumn width={10}>\n                        <Segment>\n                            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png'/>\n                            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png'/>\n                            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png'/>\n                            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png'/>\n                        </Segment>\n                    </GridColumn>\n                    <GridColumn width={5}>\n                        <Segment>\n                            <Table celled striped>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='2'>Song Details</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell collapsing>\n                                            Name\n                                        </Table.Cell>\n                                        <Table.Cell>{song.name}</Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell>\n                                            Id\n                                        </Table.Cell>\n                                        <Table.Cell>{song.name}</Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell>\n                                            Category\n                                        </Table.Cell>\n                                        <Table.Cell>{(song.category || {}).name}</Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                        </Segment>\n                    </GridColumn>\n                </GridRow>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default SongPage;","import SongTable from \"../components/SongTable\";\nimport React from \"react\";\nimport {Container, Icon} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n\nconst SongListPage = () => {\n\n    return (\n        <Container>\n            <Link to=\"/\"> <Icon name=\"arrow left\"/> Back to home page</Link>\n            <SongTable/>\n        </Container>\n    );\n};\n\nexport default SongListPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {Suspense} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\nimport ResponsiveContainer from \"./containers/ResponsiveContainer\";\nimport {Provider} from \"react-redux\";\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport {history} from './utils/history';\nimport store from './store/store';\nimport {AudioPage, EventsPage, NotesPage, PhotosPage, SongListPage, SongPage, TheoryPage} from './pages';\n\nexport default () => {\n    return (\n        <Provider store={store}>\n            <Router history={history}>\n                <Suspense fallback=\"loading\">\n                    <ResponsiveContainer>\n                        <Switch>\n                            <Route exact path={\"/\"} component={NotesPage}/>\n                            <Route exact path={\"/song/:id\"} component={SongPage}/>\n                            <Route exact path={\"/songs\"} component={SongListPage}/>\n                            <Route exact path={\"/theory\"} component={TheoryPage}/>\n                            <Route exact path={\"/photos\"} component={PhotosPage}/>\n                            <Route exact path={\"/events\"} component={EventsPage}/>\n                            <Route exact path={\"/audio\"} component={AudioPage}/>\n                        </Switch>\n                    </ResponsiveContainer>\n                </Suspense>\n            </Router>\n        </Provider>\n    );\n}"],"sourceRoot":""}